{
  "Sleep": {
    "prefix": "sleep",
    "body": "await new Promise<void>(r => setTimeout(() => r(), 500$1));"
  },
  "Async": {
    "prefix": "as",
    "body": "async "
  },
  "Await": {
    "prefix": "aw",
    "body": "await "
  },
  "ConsoleLog": {
    "prefix": "cl",
    "body": "console.log($1);"
  },
  "ConsoleError": {
    "prefix": "ce",
    "body": "console.error($1);"
  },
  "ConsoleTime": {
    "prefix": "ctime",
    "body": ["console.time('$1');", "console.timeEnd('$1');"]
  },
  "Trycatch": {
    "prefix": "try",
    "body": ["try {", "  $1", "} catch (e: unknown) {", "  // handle e", "}"]
  },
  "For ... of": {
    "prefix": "foro",
    "body": ["for (const $1 of $2) {", "  $0", "}"]
  },
  "For i < len": {
    "prefix": "forr",
    "body": [
      "for (let $i = 0; $i < $array.length; $i++) {",
      "  const $element = $array[$i];",
      "}"
    ]
  },
  "JSON.stringify": {
    "prefix": "jsons",
    "body": "JSON.stringify($0)"
  },
  "JSON.parse": {
    "prefix": "jsonp",
    "body": "JSON.parse($0)"
  },
  "const": {
    "prefix": "c",
    "body": "const "
  },
  "let": {
    "prefix": "le",
    "body": "let "
  },
  "Immediately-Invoked Function Expression": {
    "prefix": "iife",
    "body": ["(async () => {", "  $0", "})();"]
  },
  "string": {
    "prefix": "str",
    "body": ": string"
  },
  "string array": {
    "prefix": "strs",
    "body": ": string[]"
  },
  "number": {
    "prefix": "nu",
    "body": ": number"
  },
  "number array": {
    "prefix": "nus",
    "body": ": number[]"
  },
  "Returns Promise": {
    "prefix": "pr",
    "body": [": Promise<$1> {", "  $0", "}"]
  },
  "Describe block": {
    "prefix": "de",
    "body": ["describe('$1', () => {", "  $0", "});"]
  },
  "It block": {
    "prefix": "it",
    "body": ["it('$1', () => {", "  $0", "});"]
  }
}
