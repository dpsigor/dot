{
	"Sleep": {
		"prefix": "sleep",
		"body": "await new Promise(r => setTimeout(() => r(), 500$1));"
	},
	"Async": {
		"prefix": "as",
		"body": "async "
	},
	"Await": {
		"prefix": "aw",
		"body": "await "
	},
	"ConsoleLog": {
		"prefix": "cl",
		"body": "console.log($1);"
	},
	"ConsoleError": {
		"prefix": "ce",
		"body": "console.error($1)"
	},
	"ConsoleTime": {
		"prefix": "ctime",
		"body": [
			"console.time('$1');",
			"console.timeEnd('$1');"
		]
	},
	"Trycatch": {
		"prefix": "try",
		"body": [
			"try {",
			"  $1",
			"} catch (e) {",
			"  // handle e",
			"}"
		]
	},
	"For ... of": {
		"prefix": "foro",
		"body": [
			"for (const $1 of $2) {",
			"  $0",
			"}"
		]
	},
	"JSON.stringify": {
		"prefix": "jsons",
		"body": "JSON.stringify($0)"
	},
	"JSON.parse": {
		"prefix": "jsonp",
		"body": "JSON.parse($0)"
	},
	"Immediately-Invoked Function Expression": {
		"prefix": "iife",
		"body": [
			"(async () => {",
			"  $0",
			"})();"
		]
	},
  "Named arrow function": {
    "prefix": "afn",
    "body": "const $1 = ($2) => {$0};"
  },
  "Anon arrow function": {
    "prefix": "af",
    "body": "$1 => $0"
  },
  "Function": {
    "prefix": "f",
    "body": "function $1($2) {$0};"
  }
}
