priority -1

snippet cl "console log"
console.log($0);
endsnippet

snippet ce "console error"
console.error($0);
endsnippet

snippet cer "console error"
console.error('\x1b[31m', $0, '\x1b[0m');
endsnippet

snippet foro "for of"
for (const $1 of $2) {
	$0
}
endsnippet

snippet timeout "setTimeout function"
setTimeout(() => {
	${VISUAL}$0
}, ${1:10});
endsnippet

snippet for "for (...) {...} (counting up)" b
for (let ${1:i} = 0; $1 < ${2:Things.length}; $1++) {
	${VISUAL}$0
}
endsnippet

snippet iife "Immediately-Invoked Function Expression (iife)"
(async () => {
	${VISUAL}$0
})();
endsnippet

snippet e "Export keyword"
export 
endsnippet

snippet f "Function"
function $1($2) {$0};
endsnippet

snippet af "Anon Arrow Function"
$1 => $2
endsnippet

snippet aaf "Anon Async Arrow Function"
async $1 => $2
endsnippet

snippet afn "Named Arrow Function"
const $1 = ($2) => $3;
endsnippet

snippet sleep "Sleep for x ms"
await new Promise(r => setTimeout(() => r(), $1));
endsnippet

snippet ctime "Console Time"
console.time('$1');
console.timeEnd('$1');
endsnippet

snippet jsons "JSON stringify" i
JSON.stringify($0)
endsnippet

snippet jsonp "JSON parse"
JSON.parse($0)
endsnippet

snippet cv "console.log('v:', v)"
console.log('$1', $1);
endsnippet

snippet cjs "console.log(JSON.stringify())"
console.log(JSON.stringify('$1'));
endsnippet

snippet pipeline "Pipeline boilerplate"
const { pipeline, Transform } = require('stream');

const source = process.stdin;
const transf = new Transform({
	transform(chunk, encoding, callback) {
		callback(null, '---' + chunk.toString().trim() + '---\n');
	}
});
const dest = process.stdout;
const cb = e => { if (e) console.error(e); };

pipeline(
  source,
  transf,
  dest,
  cb,
);
endsnippet

snippet as "async"
async 
endsnippet

snippet aw "await"
await 
endsnippet

snippet try "trycatch"
try {$0
} catch (e) {
}
endsnippet

snippet imrds "readdirSync"
import { readdirSync } from 'fs';$0
endsnippet

snippet de "describe block"
describe('$1', () => {
  $0
})
endsnippet

snippet it "it block"
it('$1', () => {
  $0
})
endsnippet
